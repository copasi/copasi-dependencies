/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sbml.libsbml;

public class Callback {
   private long swigCPtr;
   protected boolean swigCMemOwn;

   protected Callback(long cPtr, boolean cMemoryOwn)
   {
     swigCMemOwn = cMemoryOwn;
     swigCPtr    = cPtr;
   }

   protected static long getCPtr(Callback obj)
   {
     return (obj == null) ? 0 : obj.swigCPtr;
   }

   protected static long getCPtrAndDisown (Callback obj)
   {
     long ptr = 0;

     if (obj != null)
     {
       ptr             = obj.swigCPtr;
       obj.swigCMemOwn = false;
     }

     return ptr;
   }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libsbmlJNI.delete_Callback(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    libsbmlJNI.Callback_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    libsbmlJNI.Callback_change_ownership(this, swigCPtr, true);
  }

  
/**
	 * The processing function to be implemented by the callback
	 <p>
	 * In order to stop processing return a value other than 
	 * LIBSBML_OPERATION_SUCCESS. 
	 <p>
	 * @return LIBSBML_OPERATION_SUCCESS to continue the operations
	 *         any other value to stop
	 */ public
 int process(SBMLDocument doc) {
    return (getClass() == Callback.class) ? libsbmlJNI.Callback_process(swigCPtr, this, SBMLDocument.getCPtr(doc), doc) : libsbmlJNI.Callback_processSwigExplicitCallback(swigCPtr, this, SBMLDocument.getCPtr(doc), doc);
  }

  public Callback() {
    this(libsbmlJNI.new_Callback(), true);
    libsbmlJNI.Callback_director_connect(this, swigCPtr, true, true);
  }

}
